server.port=9090
spring.application.name=realtime-collaborative-doc-editing
#spring.main.allow-bean-definition-overriding=true

# Logging level for Spring Security
logging.level.org.springframework.security=TRACE

#MongoDB configuration
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=document-upload


#Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=rsanvu001@gmail.com
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls=true


#Kafka consumer configuration
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: group001
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.topic.name=topic001
#spring.kafka.topic.name=JsonTopic001
spring.kafka.topic-json.name=topic001_json

# Redis configuration
spring.redis.host=localhost
spring.redis.port=6379
